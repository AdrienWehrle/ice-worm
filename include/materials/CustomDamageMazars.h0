/****************************************************************/
/*             DO NOT MODIFY THIS HEADER                      */
/*                      BlackBear                              */
/*                                                             */
/*           (c) 2017 Battelle Energy Alliance, LLC             */
/*                   ALL RIGHTS RESERVED                        */
/*                                                              */
/*          Prepared by Battelle Energy Alliance, LLC           */
/*            Under Contract No. DE-AC07-05ID14517              */
/*            With the U. S. Department of Energy               */
/*                                                              */
/*            See COPYRIGHT for full restrictions               */
/****************************************************************/

#pragma once

#include "ScalarDamageBase.h"
#include "GuaranteeConsumer.h"

// Forward declaration
template <typename>
class RankTwoTensorTempl;
typedef RankTwoTensorTempl<Real> RankTwoTensor;
template <typename>
class RankFourTensorTempl;
typedef RankFourTensorTempl<Real> RankFourTensor;


/**
 * Scalar damage model that defines the damage parameter using a material property
 */
class MazarsDamage : public ScalarDamageBase, public GuaranteeConsumer
{
public:
  static InputParameters validParams();
  MazarsDamage(const InputParameters & parameters);

  virtual void initQpStatefulProperties() override;
  virtual void initialSetup() override;

protected:
  virtual void updateQpDamageIndex() override;

  // Damage law parameters
  const Real & _r;
  const Real & _B;
  const Real & _sig_th;
  const Real & _alpha;

  /// Current stress
  const MaterialProperty<RankTwoTensor> & _von_mises;
};
